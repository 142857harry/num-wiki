  <div class="col-md-9" id="content">

      
      <p>This document explains how to set up gpod for mining. The Pod wiki also has a <a href="https://eth.wiki/en/fundamentals/mining">page
about mining</a>, be sure to check that one as well.</p>

<p>Mining is the process through which new blocks are created. Gpod actually creates new
blocks all the time, but these blocks need to be secured through proof-of-work so they
will be accepted by other nodes. Mining is all about creating these proof-of-work values.</p>

<p>The proof-of-work computation can be performed in multiple ways. Gpod includes a CPU
miner, which does mining within the gpod process. We discourage using the CPU miner with
the Pod mainnet. If you want to mine real pod, use GPU mining. Your best option for
doing that is the <a href="https://github.com/pod-mining/podminer">podminer</a> software.</p>

<p>Always ensure your blockchain is fully synchronised with the chain before starting to
mine, otherwise you will not be mining on the correct chain and your block rewards will
not be valueable.</p>

<h2 id="gpu-mining">GPU mining</h2>

<p>The ethash algorithm is memory hard and in order to fit the DAG into memory, it needs
1-2GB of RAM on each GPU. If you get <code class="language-plaintext highlighter-rouge">Error GPU mining. GPU memory fragmentation?</code> you
don’t have enough memory.</p>

<h3 id="installing-podminer">Installing podminer</h3>

<p>To get podminer, you need to install the podminer binary package or build it from source.
See <a href="https://github.com/pod-mining/podminer/#build">https://github.com/pod-mining/podminer/#build</a> for the official podminer
build/install instructions. At the time of writing, podminer only provides a binary for
Microsoft Windows.</p>

<h3 id="using-ethminer-with-geth">Using podminer with gpod</h3>

<p>First create an account to hold your block rewards.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>gpod account new
</code></pre></div></div>

<p>Follow the prompts and enter a good password. <strong>DO NOT FORGET YOUR PASSWORD</strong>. Also take
note of the public Pod address which is printed at the end of the account creation
process. In the following examples, we will use 0xC95767AC46EA2A9162F0734651d6cF17e5BfcF10
as the example address.</p>

<p>Now start gpod and wait for it to sync the blockchain. This will take quite a while.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>gpod --http --miner.poderbase 0xC95767AC46EA2A9162F0734651d6cF17e5BfcF10
</code></pre></div></div>

<p>Now we’re ready to start mining. In a new terminal session, run podminer and connect it to gpod:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>podminer -G -p http://127.0.0.1:8545
</code></pre></div></div>

<p><code class="language-plaintext highlighter-rouge">podminer</code> communicates with gpod on port 8545 (the default RPC port in gpod). You can
change this by giving the <a href="./JSON-RPC-Server"><code class="language-plaintext highlighter-rouge">--http.port</code> option</a> to <code class="language-plaintext highlighter-rouge">gpod</code>. Podminer will find
gpod on any port. You also need to set the port on <code class="language-plaintext highlighter-rouge">podhminer</code> with <code class="language-plaintext highlighter-rouge">-P
http://127.0.0.1:3301</code>. Setting up custom ports is necessary if you want several instances
mining on the same computer. If you are testing on a private cluster, we recommend you use
CPU mining instead.</p>

<p>If the default for <code class="language-plaintext highlighter-rouge">podminer</code> does not work try to specify the OpenCL device with:
<code class="language-plaintext highlighter-rouge">--opencl-device X</code> where X is 0, 1, 2, etc. When running <code class="language-plaintext highlighter-rouge">podminer</code> with <code class="language-plaintext highlighter-rouge">-M</code>
(benchmark), you should see something like:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Benchmarking on platform: { "platform": "NVIDIA CUDA", "device": "GeForce GTX 750 Ti", "version": "OpenCL 1.1 CUDA" }

Benchmarking on platform: { "platform": "Apple", "device": "Intel(R) Xeon(R) CPU E5-1620 v2 @ 3.70GHz", "version": "OpenCL 1.2 " }
</code></pre></div></div>

<p><strong>Note</strong> hashrate info is not available in <code class="language-plaintext highlighter-rouge">gpod</code> when GPU mining. Check your hashrate
with <code class="language-plaintext highlighter-rouge">podminer</code>, <code class="language-plaintext highlighter-rouge">miner.hashrate</code> will always report 0.</p>

<h2 id="cpu-mining-with-gpod">CPU Mining with Gpod</h2>

<p>When you start up your pod node with <code class="language-plaintext highlighter-rouge">gpod</code> it is not mining by default. To start it
in mining mode, you use the <code class="language-plaintext highlighter-rouge">--mine</code> command-line flag. The <code class="language-plaintext highlighter-rouge">--miner.threads</code> parameter can
be used to set the number parallel mining threads (defaulting to the total number of
processor cores).</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>gpod --mine --miner.threads=4
</code></pre></div></div>

<p>You can also start and stop CPU mining at runtime using the
<a href="./JavaScript-Console">console</a>. <code class="language-plaintext highlighter-rouge">miner.start</code> takes an optional parameter for
the number of miner threads.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&gt; miner.start(8)
true
&gt; miner.stop()
true
</code></pre></div></div>

<p>Note that mining for real pod only makes sense if you are in sync with the network
(since you mine on top of the consensus block). Therefore the pod blockchain
downloader/synchroniser will delay mining until syncing is complete, and after that mining
automatically starts unless you cancel your intention with <code class="language-plaintext highlighter-rouge">miner.stop()</code>.</p>

<p>In order to earn pod you must have your <strong>poderbase</strong> (or <strong>coinbase</strong>) address set.
This poderbase defaults to your <a href="./Managing-Your-Accounts">primary account</a>. If
you don’t have an poderbase address, then <code class="language-plaintext highlighter-rouge">gpod --mine</code> will not start up.</p>

<p>You can set your poderbase on the command line:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>gpod --miner.poderbase '0xC95767AC46EA2A9162F0734651d6cF17e5BfcF10' --mine 2&gt;&gt; gpod.log
</code></pre></div></div>

<p>You can reset your poderbase on the console too:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&gt; miner.setPoderbase(pod.accounts[2])
</code></pre></div></div>

<p>Note that your poderbase does not need to be an address of a local account, just an
existing one.</p>

<p>There is an option <a href="./JavaScript-Console">to add extra data</a> (32 bytes only) to
your mined blocks. By convention this is interpreted as a unicode string, so you can set
your short vanity tag.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&gt; miner.setExtra("ΞTHΞЯSPHΞЯΞ")
</code></pre></div></div>

<p>You can check your hashrate with <a href="./JavaScript-Console">miner.hashrate</a>, the
result is in H/s (Hash operations per second).</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&gt; pod.hashrate
712000
</code></pre></div></div>

<p>After you successfully mined some blocks, you can check the pod balance of your
poderbase account. Now assuming your poderbase is a local account:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&gt; pod.getBalance(pod.coinbase).toNumber();
'34698870000000'
</code></pre></div></div>

<p>You can check which blocks are mined by a particular miner (address) with the following
code snippet on the console:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&gt; function minedBlocks(lastn, addr) {
    addrs = [];
    if (!addr) {
        addr = pod.coinbase
    }
    limit = pod.blockNumber - lastn
    for (i = pod.blockNumber; i &gt;= limit; i--) {
        if (pod.getBlock(i).miner == addr) {
            addrs.push(i)
        }
    }
    return addrs
}
// scans the last 1000 blocks and returns the blocknumbers of blocks mined by your coinbase
// (more precisely blocks the mining reward for which is sent to your coinbase).
&gt; minedBlocks(1000, pod.coinbase)
[352708, 352655, 352559]
</code></pre></div></div>

<p>Note that it will happen often that you find a block yet it never makes it to the
canonical chain. This means when you locally include your mined block, the current state
will show the mining reward credited to your account, however, after a while, the better
chain is discovered and we switch to a chain in which your block is not included and
therefore no mining reward is credited. Therefore it is quite possible that as a miner
monitoring their coinbase balance will find that it may fluctuate quite a bit.</p>

<p>The logs show locally mined blocks confirmed after 5 blocks. At the moment you may find it
easier and faster to generate the list of your mined blocks from these logs.</p>


    </div>